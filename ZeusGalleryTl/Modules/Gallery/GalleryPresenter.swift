//
//  GalleryPresenter.swift
//  zeus-ios-sdk-gallery-tl
//
//  Created DSI Soporte Tecnico on 27/01/25.
//  Copyright Â© 2025 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by UPAX Zeus
//

import UIKit

class GalleryPresenter {
    weak private var view: GalleryViewProtocol?
    var interactor: GalleryInteractorInputProtocol?
    private let router: GalleryWireframeProtocol
    var results: [Photo]  = []
    var currentPage: Int = 1
    var totalPages: Int = 1

    init(interface: GalleryViewProtocol, interactor: GalleryInteractorInputProtocol?, router: GalleryWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
}

extension GalleryPresenter: GalleryPresenterProtocol {
    func onClick(index: Int) {
        router.showPreview(photo: results[index])
    }
    
    func search(word: String) {
        guard  !word.replacingOccurrences(of: " ", with: "").isEmpty else{
            results = []
            currentPage = 0
            totalPages = 0
            view?.reloadData()
            view?.reloadPaginator()
            return
        }
        currentPage = 1
        interactor?.search(word: word)
    }
    
    func requestPrevious() {
        currentPage -= 1
        interactor?.requestPrevious()
    }
    
    func requestNext() {
        currentPage += 1
        interactor?.requestNext()
    }
    
    
}

extension GalleryPresenter: GalleryInteractorOutputProtocol {
    
    func set(response: BaseResponse) {
        results = response.results
        totalPages = response.totalPages
        view?.reloadPaginator()
        view?.reloadData()
    }
    
    func error(mesage: String) {
        results = []
        totalPages = 0
        currentPage = 0
        view?.reloadPaginator()
        view?.reloadData()
    }
    
    
}
